CREATE TABLE marca (
    mar_id SERIAL PRIMARY KEY,
    mar_nome VARCHAR(60),
    mar_status VARCHAR(20)
);

CREATE TABLE modelo (
    mod_id serial PRIMARY KEY,
    mod_nome varchar(60),
    mod_status varchar(20),
    mod_marca_id integer not null,
    foreign key (mod_marca_id) references marca (mar_id)
);

CREATE TABLE categoria (
    cat_id serial PRIMARY KEY,
    cat_nome varchar(60),
    cat_valor numeric(7,2) not null,
    cat_status varchar(20)
);

CREATE TABLE veiculo (
    vei_id serial PRIMARY KEY,
    vei_placa varchar(7) unique not null,
    vei_ano_fabricacao integer,
    vei_ano_modelo integer,
    vei_tipo_combustivel varchar(20) not null,
    vei_renavan char(11) not null,
    vei_preco_compra NUMERIC(7,2),
    vei_preco_venda NUMERIC(7,2),
    vei_tipo varchar (20),
    vei_status varchar (20) not null,
    vei_num_passageiro integer,
    vei_km BIGINT,
    vei_categoria_id SERIAL not null,
    vei_modelo_id SERIAL not null,
    foreign key (vei_categoria_id) references categoria (cat_id),
    foreign key (vei_modelo_id) references modelo (mod_id)
);

CREATE TABLE usuario (
    usu_id SERIAL PRIMARY KEY,
    usu_nome VARCHAR(60),
    usu_cpf CHAR(11) unique not null,
    usu_email VARCHAR(60) unique not null,
    usu_senha VARCHAR(10) not null,
    usu_perfil VARCHAR(20),
    usu_data_cadastro DATE,
    usu_status VARCHAR(20)
);

CREATE TABLE cliente (
    cli_id SERIAL PRIMARY KEY,
    cli_razao_social VARCHAR(100),
    cli_nome VARCHAR(100),
    cli_status VARCHAR(20),
    cli_cpf_cnpj VARCHAR(14) unique not null,
    cli_rg VARCHAR(20) unique not null,
    cli_rg_orgao_emissor VARCHAR(6),
    cli_tipo VARCHAR(20)
);

CREATE TABLE motorista (
    mot_id SERIAL PRIMARY KEY,
    mot_nome VARCHAR(60) not null,
    mot_cpf VARCHAR(11) unique not null,
    mot_rg VARCHAR(20) unique not null,
    mot_rg_orgao_emissor VARCHAR(6),
    mot_cnh_numero VARCHAR(20) not null,
    mot_cnh_data_validade DATE not null,
    mot_cnh_imagem VARCHAR(100) not null,
    mot_cnh_categoria VARCHAR(5) not null
);

CREATE TABLE endereco (
    end_id SERIAL PRIMARY KEY,
    end_tipo VARCHAR(20),
    end_cep CHAR(8) not null,
    end_rua VARCHAR(60),
    end_numero INTEGER,
    end_complemento VARCHAR(60),
    end_bairro VARCHAR(60),
    end_cidade VARCHAR(60) not null,
    end_uf CHAR(2) not null,
    end_cliente_id INTEGER,
    end_motorista_id SERIAL,
    foreign key (end_cliente_id) references cliente (cli_id),
    foreign key (end_motorista_id) references motorista (mot_id)
);

CREATE TABLE contato (
    con_id SERIAL PRIMARY KEY,
    con_tipo VARCHAR(20),
    con_telefone VARCHAR(11) not null,
    con_email VARCHAR(60) unique not null,
    con_cliente_id INTEGER,
    con_motorista_id INTEGER,
	foreign key (con_cliente_id) references cliente (cli_id),
    foreign key (con_motorista_id) references motorista (mot_id)    
);

CREATE TABLE contrato (
    con_id SERIAL PRIMARY KEY,
    con_cliente_id INTEGER not null,
    con_motorista_id INTEGER not null,
    con_veiculo_id INTEGER not null,
    con_usuario_cadastro_id INTEGER not null,
    con_valor_multa NUMERIC(7,2),
    con_tanque_cheio BOOLEAN,
    con_data_retirada TIMESTAMP,
    con_data_devolucao_prevista TIMESTAMP,
    con_data_devolucao_realizada TIMESTAMP,
    con_km_inicial BIGINT,
    con_km_final BIGINT,
    con_observacoes TEXT,
    con_valores_adicionais SERIAL,
    con_valor_locacao NUMERIC(7,2) not null,
    con_carencia TIMESTAMP,
    con_valor_caucao NUMERIC(7,2),
    con_valor_seguro NUMERIC(7,2),
    con_status VARCHAR(20)
);
 